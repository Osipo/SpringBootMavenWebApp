package org.example.data.model.valuegenerators;

import org.hibernate.tuple.AnnotationValueGeneration;
import org.hibernate.tuple.GenerationTiming;
import org.hibernate.tuple.ValueGenerator;

public class UpdatedAtDateTimeGenerator implements AnnotationValueGeneration<UpdatedDateTime> {
    @Override
    public void initialize(UpdatedDateTime updatedDateTime, Class<?> aClass) {

    }

    /**
     * Set 'when' time of generation (GenerationTime)
     * @return when = GenerationTiming.INSERT
     */
    @Override
    public GenerationTiming getGenerationTiming() {
        return GenerationTiming.ALWAYS;
    }

    /**
     * Returns null as value is generated by database function 'getdate()'
     * For using JVM you can provide for column @GeneratorType(type = ValueGenerator<?>, when = GenerationTime.{INSERT|ALWAYS|NEVER})
     * @return null
     */
    @Override
    public ValueGenerator<?> getValueGenerator() {
        return null;
    }

    /**
     * Is value generated from database.
     * @return true
     */
    @Override
    public boolean referenceColumnInSql() {
        return true;
    }

    /**
     * value from database.
     * @return value of function getdate()
     */
    @Override
    public String getDatabaseGeneratedReferencedColumnValue() {
        return "getdate()";
    }
}
